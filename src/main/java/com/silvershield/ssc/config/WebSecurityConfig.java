package com.silvershield.ssc.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;

@Configuration
@EnableWebSecurity
public class WebSecurityConfig extends WebSecurityConfigurerAdapter {
//
//    private final Logger _logger = LoggerFactory.getLogger(getClass());
//
//    private UserDetailsService userDetailsService;
//
//    @Autowired
//    public WebSecurityConfig(UserDetailsService authUserDetailsService){
//        super();
//        this.userDetailsService = authUserDetailsService;
//    }
//
//    @Override
//    public void configure(WebSecurity webSecurity) {
//        webSecurity.ignoring().antMatchers("/index.html");
//    }
//
//    @Autowired
//    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {
//        auth.userDetailsService(userDetailsService).passwordEncoder(passwordEncoder());
//    }
//
//    @Override
//    public void configure(HttpSecurity http) throws Exception {
//        http
//            .authorizeRequests()
//            .anyRequest().authenticated()
//            .and()
//            .oauth2Login()
//            .and()
//            .saml2Login(Customizer.withDefaults());
//    }

    @Bean
    public PasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder(11);
    }

    @Override
    @Bean
    public AuthenticationManager authenticationManagerBean() throws Exception {
        return super.authenticationManagerBean();
    }
//
//    @Bean
//    public RelyingPartyRegistrationRepository relyingPartyRegistrationRepository() {
//        return new InMemoryRelyingPartyRegistrationRepository(this.getSaml2RelyingPartyRegistration());
//    }
//
//    private RelyingPartyRegistration getSaml2RelyingPartyRegistration() {
//        //remote IDP entity ID
//        String idpEntityId = "https://simplesaml-for-spring-saml.cfapps.io/saml2/idp/metadata.php";
//        //remote WebSSO Endpoint - Where to Send AuthNRequests to
//        String webSsoEndpoint = "https://simplesaml-for-spring-saml.cfapps.io/saml2/idp/SSOService.php";
//        //local registration ID
//        String registrationId = "simplesamlphp";
//        //local entity ID - autogenerated based on URL
//        String localEntityIdTemplate = "{baseUrl}/saml2/service-provider-metadata/{registrationId}";
//        //local signing (and decryption key)
//        Saml2X509Credential signingCredential = getSigningCredential();
//        //IDP certificate for verification of incoming messages
//        Saml2X509Credential idpVerificationCertificate = getVerificationCertificate();
//        return RelyingPartyRegistration.
//                                         .build();
//    }
}
